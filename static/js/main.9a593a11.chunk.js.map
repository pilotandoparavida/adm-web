{"version":3,"sources":["services/api.js","pages/Entrar.js","pages/PercentBarCell.js","pages/EstadoCell.js","pages/ListTurma.js","pages/ListAluno.js","pages/Main.js","routes.js","App.js","registerServiceWorker.js","index.js","assets/logo.png"],"names":["api","axios","create","baseURL","timeout","Entrar","history","useState","geralError","setGeralError","login","setLogin","loginError","setLoginError","senha","setSenha","senhaError","setSenhaError","loading","setLoading","validateForm","valid","event","a","preventDefault","get","headers","then","response","hash","data","dados","localStorage","setItem","push","catch","error","msg","className","src","logo","style","alt","onClick","removeItem","onSubmit","htmlFor","fontSize","color","type","id","placeholder","onChange","target","value","disabled","BorderLinearProgress","withStyles","root","height","backgroundColor","lighten","bar","borderRadius","LinearProgress","PercentBarCell","row","restProps","percent","hasOwnProperty","vagas","TableCell","toFixed","variant","EstadoCell","Cell","convertDate","date","Date","getDate","getMonth","getFullYear","rows","turmaS","i","length","_id","rTurma","conf","transf","falt","AlunoTurma","j","estado","descricao","totalinscritos","confirmado","concluido","faltoso","transferido","console","log","alert","ListTurma","alunoS","turma","rAlunoTurma","nome","cnh","ufcnh","celular","sexo","nascimento","ListAluno","commandComponents","add","onExecute","textAlign","Button","title","edit","IconButton","delete","window","confirm","commit","cancel","Command","CommandButton","EditCell","theme","lookupEditCell","padding","spacing","dialog","width","inputRoot","selectMenu","position","name","availableColumnValues","onValueChange","classes","Select","MenuProps","input","Input","map","item","MenuItem","key","props","getRowId","Main","getItem","loadingTurma","setLoadingTurma","loadingAluno","setLoadingAluno","rowsAluno","setRowsAluno","rowsTurma","setRowsTurma","typeData","setTypeData","sorting","getSorting","editingRowIds","getEditingRowIds","addedRows","setAddedRows","rowChanges","setRowChanges","currentPage","setCurrentPage","pageSize","setPageSize","pageSizes","TableEditColumn","COLUMN_TYPE","leftFixedColumns","columns","setColumns","setRows","tableColumnExtensions","setTableColumnExtensions","columnOrder","setColumnOrder","percentBar","setPercentBar","totalSummaryItems","setTotalSummaryItems","columnName","align","wordWrapEnabled","useEffect","fetchData","undefined","CircularProgress","disableShrink","size","Paper","onSortingChange","onCurrentPageChange","onPageSizeChange","onEditingRowIdsChange","onRowChangesChange","onAddedRowsChange","Object","keys","amount","discount","saleDate","toISOString","split","onCommitChanges","changedRows","added","changed","deleted","startingAddedId","index","deletedIds","rowsForDelete","slice","forEach","rowId","findIndex","splice","deleteRows","totalItems","columnExtensions","cellComponent","column","order","onOrderChange","showSortingControls","showAddCommand","showEditCommand","showDeleteCommand","commandComponent","leftColumns","Routes","basename","process","path","component","EntrarPage","exact","MainPage","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.9a593a11.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"https://adm-backend.herokuapp.com\", \n    // baseURL: \"http://localhost:4444\", \n    timeout: 30000\n});\n\nexport default api;\n","import React, { useState } from 'react';\nimport api from '../services/api';\nimport logo from '../assets/logo.png';\n\nexport default function Entrar({ history }) {\n    const [geralError, setGeralError] = useState('');\n    const [login, setLogin] = useState('');\n    const [loginError, setLoginError] = useState('');\n    const [senha, setSenha] = useState('');\n    const [senhaError, setSenhaError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    function validateForm() {\n        let valid = true;\n        if (!login) {\n            setLoginError('Informe o login.');\n            valid = false;\n        } else {\n            setLoginError('');\n        }\n        if (!senha) {\n            setSenhaError('Informe a senha.');\n            valid = false;\n        } else {\n            setSenhaError('');\n        }\n        return valid;\n    }\n\n    async function handleEntrar(event) {\n        setGeralError('');\n        event.preventDefault();\n        if (validateForm()) {\n            setLoading(true);\n            api.get('/login', { headers: { login, senha } })\n                .then((response) => {\n                    setLoading(false);\n                    const hash = response.data.dados;\n                    localStorage.setItem('@admfrontendppv/hash', hash);\n                    localStorage.setItem('@admfrontendppv/login', login);\n                    if (history) history.push('/');\n                })\n                .catch((error) => {\n                    setLoading(false);\n                    if (error.response) {\n                        setGeralError(error.response.data.msg);\n                    }\n                });\n        }\n    }\n\n    function handleLogout() {\n        localStorage.removeItem('@admfrontendppv/login');\n        localStorage.removeItem('@admfrontendppv/hash');\n        if (history) history.push('/login');\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <img src={logo} style={{ 'cursor': 'pointer' }} alt=\"Pilotando para Vida\" className=\"logo\" onClick={() =>\n                    handleLogout()} />\n                <div className=\"content\">\n                    <form onSubmit={handleEntrar}>\n                        <label htmlFor=\"login\">Login*</label>\n                        <div style={{ fontSize: 12, color: 'red' }}>{loginError}</div>\n                        <input type=\"text\" id=\"login\" placeholder=\"Login\" onChange={event => setLogin(event.target.value)} value={login} />\n\n                        <label htmlFor=\"nascimento\">Senha*</label>\n                        <div style={{ fontSize: 12, color: 'red' }}>{senhaError}</div>\n                        <input type=\"password\" id=\"senha\" placeholder=\"Senha\" onChange={event => setSenha(event.target.value)} value={senha} />\n\n                        <div style={{ fontSize: 12, color: 'red' }}>{geralError}</div>\n                        <button type=\"submit\" disabled={loading}>\n                            {loading && <i className=\"fa fa-refresh fa-spin\" />}\n                            Entrar\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}","import * as React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport { lighten, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 10,\n        backgroundColor: lighten('#F58D50', 0.8),\n    },\n    bar: {\n        borderRadius: 20,\n        backgroundColor: '#F58D50',\n    },\n})(LinearProgress);\n\nconst PercentBarCellBase = ({ value, style, row, ...restProps }) => {\n    let percent = value * 100;\n    if (row.hasOwnProperty('vagas')) {\n        percent = value*100/row.vagas;\n    }\n    return (\n        <TableCell\n            {...restProps}\n        >\n            <center>{value} ({percent.toFixed(2)}%)</center>\n            <BorderLinearProgress\n                variant=\"determinate\"\n                color=\"secondary\"\n                value={percent}\n            />\n        </TableCell>\n    );\n};\n\nexport const PercentBarCell = PercentBarCellBase;","import React from 'react';\nimport {\n    Table,\n  } from '@devexpress/dx-react-grid-material-ui';\n\nconst EstadoCellBase = ({ value, style, ...restProps }) => (\n  <Table.Cell\n    {...restProps}\n  >\n    <span\n      style={{\n        color: value === \"CONFIRMADO\" ? 'green' : \n                (\n                    value === \"INSCRITO\" ? 'blue' : 'red'\n                ),\n      }}\n    >\n      {value}\n    </span>\n  </Table.Cell>\n);\n\nexport const EstadoCell = EstadoCellBase;","import api from '../services/api';\n\nfunction convertDate(data) {\n    const date = new Date(data);\n    return date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear();\n}\n\nasync function ListTurma() {\n    const rows = []\n    try {\n        const response = await api.get('/turma');\n        const turmaS = response.data.dados;\n        for (let i = 0; i < turmaS.length; ++i) {\n            try {\n                const rTurma = await api.get('/aluno/turma', { headers: { 'turma_id': turmaS[i]._id } });\n                let conf = 0;\n                let transf = 0;\n                let conc = 0;\n                let falt = 0;\n                const AlunoTurma = rTurma.data.dados;\n                for (let j = 0; j < AlunoTurma.length; ++j) {\n                    if (AlunoTurma[j].estado === \"CONCLUIDO\") conf++;\n                    else if (AlunoTurma[j].estado === \"TRANSFERIDO\") transf++;\n                    else if (AlunoTurma[j].estado === \"CONFIRMADO\") conf++;\n                    else if (AlunoTurma[j].estado === \"FALTOSO\") falt++;\n                }\n                if (turmaS[i].descricao === \"ESPERA\") {\n                    rows.push({\n                        id: turmaS[i]._id,\n                        data: \"À definir\",\n                        descricao: turmaS[i].descricao,\n                        vagas: 0,\n                        totalinscritos: turmaS[i].totalinscritos,\n                        confirmado: 0,\n                        concluido: 0,\n                        faltoso: 0,\n                        transferido: 0,\n                    });\n                } else {\n                    rows.push({\n                        id: turmaS[i]._id,\n                        data: convertDate(turmaS[i].data),\n                        descricao: turmaS[i].descricao,\n                        vagas: turmaS[i].vagas,\n                        totalinscritos: turmaS[i].totalinscritos,\n                        confirmado: conf,\n                        concluido: conc,\n                        faltoso: falt,\n                        transferido: transf,\n                    });\n                }\n            } catch (e) {\n                if (e.response) {\n                    console.log(e.response.data.msg);\n                }\n                alert(\"Error!\");\n            }\n        }\n    } catch (error) {\n        if (error.response) {\n            console.log(error.response.data.msg);\n        }\n    }\n    return rows;\n}\n\nexport default ListTurma;","import api from '../services/api';\n\nfunction convertDate(data) {\n    const date = new Date(data);\n    return date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear();\n}\n\nasync function ListAluno() {\n    const rows = []\n    try {\n        const response = await api.get('/aluno');\n        const alunoS = response.data.dados;\n        for (let i = 0; i < alunoS.length; ++i) {\n\n            try {\n                const rTurma = await api.get( `/turma/${alunoS[i].turma}`);\n                const rAlunoTurma = await api.get('/aluno/turma', { headers: {'aluno_id': alunoS[i]._id, 'turma_id': alunoS[i].turma}});\n\n                rows.push({\n                    id: alunoS[i]._id,\n                    nome: alunoS[i].nome,\n                    cnh: alunoS[i].cnh + '/' + alunoS[i].ufcnh,\n                    celular: alunoS[i].celular,\n                    sexo: alunoS[i].sexo,\n                    nascimento: alunoS[i].nascimento,\n                    turma: rTurma.data.dados.descricao,\n                    data: convertDate(rTurma.data.dados.data),\n                    estado: rAlunoTurma.data.dados.estado,\n                });\n            } catch (error) {\n                if (error.response) {\n                    console.log(error.response.data.msg);\n                }\n            }            \n        }\n    } catch (error) {\n        if (error.response) {\n            console.log(error.response.data.msg);\n        }\n    }\n    return rows;\n}\n\nexport default ListAluno;","import React, { useEffect, useState } from 'react';\nimport logo from '../assets/logo.png';\nimport './Main.css'\nimport {\n    SortingState, EditingState, PagingState, SummaryState,\n    IntegratedPaging, IntegratedSorting, IntegratedSummary,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    Table, TableHeaderRow, TableEditRow, TableEditColumn,\n    PagingPanel, DragDropProvider, TableColumnReordering,\n    TableFixedColumns, TableSummaryRow,\n} from '@devexpress/dx-react-grid-material-ui';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {PercentBarCell} from './PercentBarCell'\nimport {EstadoCell} from './EstadoCell'\nimport ListTurma from './ListTurma'\nimport ListAluno from './ListAluno';\n\nconst styles = theme => ({\n    lookupEditCell: {\n        padding: theme.spacing(1),\n    },\n    dialog: {\n        width: 'calc(100% - 16px)',\n    },\n    inputRoot: {\n        width: '100%',\n    },\n    selectMenu: {\n        position: 'absolute !important',\n    },\n});\n\nconst AddButton = ({ onExecute }) => (\n    <div style={{ textAlign: 'center' }}>\n        <Button\n            color=\"primary\"\n            onClick={onExecute}\n            title=\"Criar\"\n        >\n            Adicionar\n      </Button>\n    </div>\n);\n\nconst EditButton = ({ onExecute }) => (\n    <IconButton onClick={onExecute} title=\"Editar\">\n        <EditIcon />\n    </IconButton>\n);\n\nconst DeleteButton = ({ onExecute }) => (\n    <IconButton\n        onClick={() => {\n            // eslint-disable-next-line\n            if (window.confirm('Você tem certeza que deseja deletar este item?')) {\n                onExecute();\n            }\n        }}\n        title=\"Delete row\"\n    >\n        <DeleteIcon />\n    </IconButton>\n);\n\nconst CommitButton = ({ onExecute }) => (\n    <IconButton onClick={onExecute} title=\"Salvar alterações\">\n        <SaveIcon />\n    </IconButton>\n);\n\nconst CancelButton = ({ onExecute }) => (\n    <IconButton color=\"secondary\" onClick={onExecute} title=\"Cancelar alterações\">\n        <CancelIcon />\n    </IconButton>\n);\n\nconst commandComponents = {\n    add: AddButton,\n    edit: EditButton,\n    delete: DeleteButton,\n    commit: CommitButton,\n    cancel: CancelButton,\n};\n\nconst Command = ({ id, onExecute }) => {\n    const CommandButton = commandComponents[id];\n    return (\n        <CommandButton\n            onExecute={onExecute}\n        />\n    );\n};\n\nconst LookupEditCellBase = ({\n    availableColumnValues, value, onValueChange, classes,\n}) => (\n        <TableCell\n            className={classes.lookupEditCell}\n        >\n            <Select\n                value={value}\n                onChange={event => onValueChange(event.target.value)}\n                MenuProps={{\n                    className: classes.selectMenu,\n                }}\n                input={(\n                    <Input\n                        classes={{ root: classes.inputRoot }}\n                    />\n                )}\n            >\n                {availableColumnValues.map(item => (\n                    <MenuItem key={item} value={item}>\n                        {item}\n                    </MenuItem>\n                ))}\n            </Select>\n        </TableCell>\n    );\nexport const LookupEditCell = withStyles(styles, { name: 'ControlledModeDemo' })(LookupEditCellBase);\n\nconst EditCell = (props) => {\n    return <TableEditRow.Cell {...props} />;\n};\n\nconst getRowId = row => row.id;\n\nexport default function Main({ history }) {\n    const [login] = useState(\n        localStorage.getItem('@admfrontendppv/login') || ''\n    );\n    const [hash] = useState(\n        localStorage.getItem('@admfrontendppv/hash') || ''\n    );\n    const [loadingTurma, setLoadingTurma] = useState(false);\n    const [loadingAluno, setLoadingAluno] = useState(false);\n    const [rowsAluno, setRowsAluno] = useState([]);\n    const [rowsTurma, setRowsTurma] = useState([]);\n    const [typeData, setTypeData] = useState('');\n    const [sorting, getSorting] = useState([]);\n    const [editingRowIds, getEditingRowIds] = useState([]);\n    const [addedRows, setAddedRows] = useState([]);\n    const [rowChanges, setRowChanges] = useState({});\n    const [currentPage, setCurrentPage] = useState(0);\n    const [pageSize, setPageSize] = useState(0);\n    const [pageSizes] = useState([5, 10, 0]);\n    const [leftFixedColumns] = useState([TableEditColumn.COLUMN_TYPE]);\n\n    const [columns, setColumns] = useState([]);    \n    const [rows, setRows] = useState([]);\n    const [tableColumnExtensions, setTableColumnExtensions] = useState([]);\n    const [columnOrder, setColumnOrder] = useState([]);    \n    const [percentBar, setPercentBar] = useState({});\n    const [totalSummaryItems, setTotalSummaryItems] = useState([]);\n\n    const Cell = (props) => {\n        const { column } = props;        \n\n        if (typeData === \"Turma\") {\n            if (percentBar.hasOwnProperty(column.name)) {\n                if (props.row.hasOwnProperty('descricao')) {\n                    if (props.row.descricao === \"ESPERA\") {\n                        return <Table.Cell {...props} />;\n                    }\n                }\n                return <PercentBarCell {...props} />;\n            }\n        } else { // Aluno\n            if (column.name === \"estado\") {\n                return <EstadoCell {...props} />\n            }\n        }\n\n        return <Table.Cell {...props} />;\n    };\n\n    const changeAddedRows = value => setAddedRows(\n        value.map(row => (Object.keys(row).length ? row : {\n            amount: 0,\n            discount: 0,\n            saleDate: new Date().toISOString().split('T')[0],\n        })),\n    );\n\n    const deleteRows = (deletedIds) => {\n        const rowsForDelete = rows.slice();\n        deletedIds.forEach((rowId) => {\n            const index = rowsForDelete.findIndex(row => row.id === rowId);\n            if (index > -1) {\n                rowsForDelete.splice(index, 1);\n            }\n        });\n        return rowsForDelete;\n    };\n\n    const commitChanges = ({ added, changed, deleted }) => {\n        let changedRows;\n        if (added) {\n            const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\n            changedRows = [\n                ...rows,\n                ...added.map((row, index) => ({\n                    id: startingAddedId + index,\n                    ...row,\n                })),\n            ];\n        }\n        if (changed) {\n            changedRows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n        }\n        if (deleted) {\n            changedRows = deleteRows(deleted);\n        }\n        setRows(changedRows);\n    };\n\n    useEffect (() => { // executa uma única vez\n        async function fetchData () {\n            setLoadingAluno(true);\n            setLoadingTurma(true);\n            setRowsTurma(await ListTurma());\n            setLoadingTurma(false);\n            setRowsAluno(await ListAluno());\n            setLoadingAluno(false);\n        }\n        fetchData();\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (login === '' || hash === '' || hash === undefined || login === undefined) {\n            localStorage.removeItem('@admfrontendppv/login');\n            localStorage.removeItem('@admfrontendppv/hash');\n            if (history) history.push('/login');\n        }                \n    }, [login, hash, history]);\n\n    function handleLogout() {\n        localStorage.removeItem('@admfrontendppv/login');\n        localStorage.removeItem('@admfrontendppv/hash');\n        if (history) history.push('/login');\n    }\n\n    async function ShowTurmas() {\n        setLoadingTurma(true);\n        setTypeData('Turma');\n        setRows([]);\n        setTableColumnExtensions([\n            { columnName: 'data', width: 100, align: 'center' },\n            { columnName: 'descricao', width: 150, align: 'left' },\n            { columnName: 'vagas', width: 100, align: 'center' },\n            { columnName: 'totalinscritos', width: 130, align: 'center' },\n            { columnName: 'confirmado', width: 140, align: 'center' },\n            { columnName: 'concluido', width: 130, align: 'center' },\n            { columnName: 'faltoso', width: 130, align: 'center' },\n            { columnName: 'transferido', width: 130, align: 'center' },\n        ]);\n        setColumns([\n            { name: 'data', title: 'Data' },\n            { name: 'descricao', title: 'Descrição' },\n            { name: 'vagas', title: 'Vagas' },\n            { name: 'totalinscritos', title: 'Inscrito' },\n            { name: 'confirmado', title: 'Confirmado' },\n            { name: 'transferido', title: 'Transferido' },\n            { name: 'concluido', title: 'Concluído' },\n            { name: 'faltoso', title: 'Faltoso' },\n        ]);\n        setColumnOrder(['data', 'descricao', 'vagas', 'totalinscritos', 'confirmado', 'concluido', 'faltoso', 'transferido']);\n        setPercentBar({ confirmado: true, totalinscritos: true, concluido: true, faltoso: true, transferido: true });\n        setTotalSummaryItems([\n            { columnName: 'concluido', type: 'sum' },\n            { columnName: 'totalinscritos', type: 'sum' },\n            { columnName: 'faltoso', type: 'sum' },\n            { columnName: 'confirmado', type: 'sum' },\n            { columnName: 'transferido', type: 'sum' },\n        ]);\n        setRows(rowsTurma);\n        setLoadingTurma(false);\n    }\n\n    async function ShowAlunos() {   \n        setLoadingAluno(true);\n        setTypeData('Aluno');\n        setRows([]);\n        setTableColumnExtensions([\n            { columnName: 'nome', width: 180, align: 'left', wordWrapEnabled: true },\n            { columnName: 'cnh', width: 150, align: 'right' },\n            { columnName: 'nascimento', width: 130, align: 'center' },\n            { columnName: 'celular', width: 130, align: 'left' },\n            { columnName: 'sexo', width: 80, align: 'center' },\n            { columnName: 'turma', width: 100, align: 'center' },\n            { columnName: 'data', width: 100, align: 'center' },\n            { columnName: 'estado', width: 130, align: 'center' },\n        ]);\n        setColumns([\n            { name: 'nome', title: 'Nome' },\n            { name: 'cnh', title: 'CNH' },\n            { name: 'nascimento', title: 'Nascimento' },\n            { name: 'celular', title: 'Celular' },\n            { name: 'sexo', title: 'Sexo' },\n            { name: 'turma', title: 'Turma' },\n            { name: 'data', title: 'Data' },\n            { name: 'estado', title: 'Estado' },\n        ]);\n        setColumnOrder(['nome', 'cnh', 'nascimento', 'celular', 'sexo', 'turma', 'data', 'estado']);\n        setRows(rowsAluno);\n        setLoadingAluno(false);\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <img src={logo} style={{ 'cursor': 'pointer' }} alt=\"Pilotando para Vida\" className=\"logo\" onClick={() =>\n                    handleLogout()} />\n                <div className=\"content\">\n                    <div style={{ 'display': 'flex', 'flexDirection': 'row' }}>\n                        <button style={{ 'margin': '5px' }} onClick={ShowTurmas}>\n                            {loadingTurma && <CircularProgress disableShrink size=\"20px\" style={{ color: \"#FFF\" }} />}\n                            {!loadingTurma && \"Turma\"}\n                        </button>\n                        <button style={{ 'margin': '5px' }} onClick={ShowAlunos}>\n                            {loadingAluno && <CircularProgress disableShrink size=\"20px\" style={{ color: \"#FFF\" }} />}\n                            {!loadingAluno && \"Aluno\"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"data\" id=\"data\">\n                <center><h1>{typeData}</h1></center>\n                <p />\n                <Paper>\n                    <Grid\n                        rows={rows}\n                        columns={columns}\n                        getRowId={getRowId}\n                    >\n                        <SortingState\n                            sorting={sorting}\n                            onSortingChange={getSorting}\n                        />\n                        <PagingState\n                            currentPage={currentPage}\n                            onCurrentPageChange={setCurrentPage}\n                            pageSize={pageSize}\n                            onPageSizeChange={setPageSize}\n                        />\n                        <EditingState\n                            editingRowIds={editingRowIds}\n                            onEditingRowIdsChange={getEditingRowIds}\n                            rowChanges={rowChanges}\n                            onRowChangesChange={setRowChanges}\n                            addedRows={addedRows}\n                            onAddedRowsChange={changeAddedRows}\n                            onCommitChanges={commitChanges}\n                        />\n                        <SummaryState\n                            totalItems={totalSummaryItems}\n                            title=\"Total\"\n                        />\n\n                        <IntegratedSorting />\n                        <IntegratedPaging />\n                        <IntegratedSummary />\n\n                        <DragDropProvider />\n\n                        <Table\n                            columnExtensions={tableColumnExtensions}\n                            cellComponent={Cell}\n                        />\n                        <TableColumnReordering\n                            order={columnOrder}\n                            onOrderChange={setColumnOrder}\n                        />\n                        <TableHeaderRow showSortingControls />\n                        <TableEditRow\n                            cellComponent={EditCell}\n                        />\n                        <TableEditColumn\n                            width={170}\n                            showAddCommand={!addedRows.length}\n                            showEditCommand\n                            showDeleteCommand\n                            commandComponent={Command}\n                        />\n                        <TableSummaryRow />\n                        <TableFixedColumns\n                            leftColumns={leftFixedColumns}\n                        />\n                        <PagingPanel\n                            pageSizes={pageSizes}\n                        />\n                    </Grid>\n                </Paper>\n            </div>\n        </>\n    );\n}\n\n/// https://devexpress.github.io/devextreme-reactive/react/grid/docs/guides/getting-started/\n/// https://devexpress.github.io/devextreme-reactive/react/grid/\n\n// css: https://material-ui.com/pt/components/grid/","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport EntrarPage from './pages/Entrar';\nimport MainPage from './pages/Main';\n\nexport default function Routes () {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL} >\n            <Switch>\n                <Route path=\"/login\" component={EntrarPage}/>\n                <Route path=\"/\" exact component={MainPage}/>\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport Routes from './routes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo.90f64a36.png\";"],"sourceRoot":""}