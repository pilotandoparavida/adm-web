{"version":3,"sources":["services/api.js","pages/Entrar.js","pages/Main.js","routes.js","App.js","registerServiceWorker.js","index.js","assets/logo.png"],"names":["api","axios","create","baseURL","timeout","Entrar","history","useState","geralError","setGeralError","login","setLogin","loginError","setLoginError","senha","setSenha","senhaError","setSenhaError","loading","setLoading","validateForm","valid","event","a","preventDefault","get","headers","then","response","hash","data","dados","localStorage","setItem","push","catch","error","msg","className","src","logo","style","alt","onClick","removeItem","onSubmit","htmlFor","fontSize","color","type","id","placeholder","onChange","target","value","disabled","Main","getItem","DataOnGrid","props","title","rows","columns","columnExtensions","tableColumnExtensions","defaultCurrentPage","pageSize","showSortingControls","convertDate","date","Date","getDate","getMonth","getFullYear","useEffect","undefined","turmaS","i","length","descricao","vagas","totalinscritos","endereco","ReactDOM","render","name","columnName","width","document","getElementById","console","log","alunoS","nome","cnh","ufcnh","celular","sexo","nascimento","Routes","path","component","EntrarPage","exact","MainPage","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.b7903e11.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"https://adm-backend.herokuapp.com\", \n    // baseURL: \"http://localhost:4444\", \n    timeout: 30000\n});\n\nexport default api;\n","import React, { useState } from 'react';\nimport api from '../services/api';\nimport logo from '../assets/logo.png';\n\nexport default function Entrar({ history }) {\n    const [geralError, setGeralError] = useState('');\n    const [login, setLogin] = useState('');\n    const [loginError, setLoginError] = useState('');\n    const [senha, setSenha] = useState('');\n    const [senhaError, setSenhaError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    function validateForm() {\n        let valid = true;\n        if (!login) {\n            setLoginError('Informe o login.');\n            valid = false;\n        } else {\n            setLoginError('');\n        }\n        if (!senha) {\n            setSenhaError('Informe a senha.');\n            valid = false;\n        } else {\n            setSenhaError('');\n        }\n        return valid;\n    }\n\n    async function handleEntrar(event) {\n        setGeralError('');\n        event.preventDefault();\n        if (validateForm()) {\n            setLoading(true);\n            api.get('/login', { headers: { login, senha } })\n                .then((response) => {\n                    setLoading(false);\n                    const hash = response.data.dados;\n                    localStorage.setItem('@admfrontendppv/hash', hash);\n                    localStorage.setItem('@admfrontendppv/login', login);\n                    if (history) history.push('/');\n                })\n                .catch((error) => {\n                    setLoading(false);\n                    if (error.response) {\n                        setGeralError(error.response.data.msg);\n                    }\n                });\n        }\n    }\n\n    function handleLogout() {\n        localStorage.removeItem('@admfrontendppv/login');\n        localStorage.removeItem('@admfrontendppv/hash');\n        if (history) history.push('/login');\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <img src={logo} style={{ 'cursor': 'pointer' }} alt=\"Pilotando para Vida\" className=\"logo\" onClick={() =>\n                    handleLogout()} />\n                <div className=\"content\">\n                    <form onSubmit={handleEntrar}>\n                        <label htmlFor=\"login\">Login*</label>\n                        <div style={{ fontSize: 12, color: 'red' }}>{loginError}</div>\n                        <input type=\"text\" id=\"login\" placeholder=\"Login\" onChange={event => setLogin(event.target.value)} value={login} />\n\n                        <label htmlFor=\"nascimento\">Senha*</label>\n                        <div style={{ fontSize: 12, color: 'red' }}>{senhaError}</div>\n                        <input type=\"password\" id=\"senha\" placeholder=\"Senha\" onChange={event => setSenha(event.target.value)} value={senha} />\n\n                        <div style={{ fontSize: 12, color: 'red' }}>{geralError}</div>\n                        <button type=\"submit\" disabled={loading}>\n                            {loading && <i className=\"fa fa-refresh fa-spin\" />}\n                            Entrar\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport logo from '../assets/logo.png';\nimport api from '../services/api';\nimport './Main.css'\nimport { Grid, Table, TableHeaderRow, PagingPanel } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    PagingState,\n    IntegratedPaging,\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\n\nimport ReactDOM from 'react-dom';\n\n/// https://devexpress.github.io/devextreme-reactive/react/grid/docs/guides/getting-started/\n/// https://devexpress.github.io/devextreme-reactive/react/grid/\n\nexport default function Main({ history }) {\n    const [login] = useState(\n        localStorage.getItem('@admfrontendppv/login') || ''\n    );\n    const [hash] = useState(\n        localStorage.getItem('@admfrontendppv/hash') || ''\n    );\n\n    useEffect(() => {\n        if (login === '' || hash === '' || hash === undefined || login === undefined) {\n            localStorage.removeItem('@admfrontendppv/login');\n            localStorage.removeItem('@admfrontendppv/hash');\n            if (history) history.push('/login');\n        }\n    }, [login, hash, history]);\n\n    function handleLogout() {\n        localStorage.removeItem('@admfrontendppv/login');\n        localStorage.removeItem('@admfrontendppv/hash');\n        if (history) history.push('/login');\n    }\n\n    function DataOnGrid(props) {\n        return (\n            <>\n                <h1>{props.title}</h1>\n                <Grid\n                    rows={props.rows}\n                    columns={props.columns}\n                    columnExtensions={props.tableColumnExtensions}>\n                    <SortingState\n                        // defaultSorting={props.sorting}\n                    />\n                    <IntegratedSorting />\n                    <PagingState\n                        defaultCurrentPage={0}\n                        pageSize={10}\n                    />\n                    <IntegratedPaging />\n                    <Table />\n                    <TableHeaderRow showSortingControls />\n                    <PagingPanel />\n                </Grid>\n            </>\n        );\n    }\n\n    function convertDate(data) {\n        const date = new Date(data);\n        return date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear();\n    }\n\n    function fetchTurma() {\n        api.get('/turma')\n            .then((response) => {\n                const columns = [\n                    { name: 'descricao', title: 'Descrição' },\n                    { name: 'data', title: 'Data' },\n                    { name: 'vagas', title: 'Vagas' },\n                    { name: 'totalinscritos', title: 'Total Inscritos' },\n                    { name: 'endereco', title: 'Endereço' }\n                ];\n                const tableColumnExtensions = [\n                    { columnName: 'descricao', width: 'auto' },\n                    { columnName: 'data', width: '10px' },\n                    { columnName: 'vagas', width: '10px' },\n                    { columnName: 'totalinscritos', width: '10px' },\n                    { columnName: 'endereco', width: 'auto' },\n                ];\n                const rows = [];\n                const turmaS = response.data.dados;\n                for (let i = 0; i < turmaS.length; ++i) {\n                    rows.push({\n                        descricao: turmaS[i].descricao,\n                        data: convertDate(turmaS[i].data),\n                        vagas: turmaS[i].vagas,\n                        totalinscritos: turmaS[i].totalinscritos,\n                        endereco: turmaS[i].endereco\n                    });\n                }\n\n                ReactDOM.render(<DataOnGrid \n                        title='Turma' \n                        rows={rows} \n                        columns={columns} \n                        tableColumnExtensions={tableColumnExtensions}\n                     />, document.getElementById('data'));\n            })\n            .catch((error) => {\n                if (error.response) {\n                    console.log(error.response.data.msg);\n                }\n            });\n    }\n\n    function fetchAluno() {\n        api.get('/aluno')\n            .then((response) => {\n                const columns = [\n                    { name: 'nome', title: 'Nome' },\n                    { name: 'cnh', title: 'CNH' },\n                    { name: 'ufcnh', title: 'UF CNH' },\n                    { name: 'nascimento', title: 'Nascimento' },\n                    { name: 'celular', title: 'Celular' },\n                    { name: 'sexo', title: 'Sexo' },\n                    // { name: 'email', title: 'E-mail' },\n                    // { name: 'cpf', title: 'CPF' },\n                    // { name: 'rg', title: 'RG'},\n                ];\n                const tableColumnExtensions = [\n                    { columnName: 'nome', width: 'auto' },\n                    { columnName: 'cnh', width: '50px' },\n                    { columnName: 'ufcnh', width: '10px' },\n                    { columnName: 'celular', width: '20px' },\n                    { columnName: 'sexo', width: '10px' },\n                    { columnName: 'nascimento', width: '60px' },\n                ];\n                const rows = [];\n                const alunoS = response.data.dados;\n                for (let i = 0; i < alunoS.length; ++i) {\n                    rows.push({\n                        nome: alunoS[i].nome,\n                        cnh: alunoS[i].cnh,\n                        ufcnh: alunoS[i].ufcnh,\n                        celular: alunoS[i].celular,\n                        sexo: alunoS[i].sexo,\n                        nascimento: alunoS[i].nascimento,\n                        // email: alunoS[i].email,\n                        // cpf: alunoS[i].cpf,\n                        // rg: alunoS[i].rg,\n                    });\n                }\n\n                ReactDOM.render(<DataOnGrid \n                    title='Aluno' \n                    rows={rows} \n                    columns={columns} \n                    tableColumnExtensions={tableColumnExtensions}\n                 />, document.getElementById('data'));\n            })\n            .catch((error) => {\n                if (error.response) {\n                    console.log(error.response.data.msg);\n                }\n            });\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <img src={logo} style={{ 'cursor': 'pointer' }} alt=\"Pilotando para Vida\" className=\"logo\" onClick={() =>\n                    handleLogout()} />\n                <div className=\"content\">\n                    <div style={{ 'display': 'flex', 'flexDirection': 'row' }}>\n                        <button style={{ 'margin': '5px' }} onClick={fetchTurma}>\n                            Turma\n                        </button>\n                        <button style={{ 'margin': '5px' }} onClick={fetchAluno}>\n                            Aluno\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"data\" id=\"data\">\n            </div>\n        </>\n    );\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport EntrarPage from './pages/Entrar';\nimport MainPage from './pages/Main';\n\nexport default function Routes () {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/login\" component={EntrarPage}/>\n                <Route path=\"/\" exact component={MainPage}/>\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport Routes from './routes';\nimport './App.css';\n// import logo from './assets/logo.png';\n\nfunction App() {\n  // function handleLogout() {\n  //   localStorage.removeItem('@admfrontendppv/login');\n  //   localStorage.removeItem('@admfrontendppv/hash');\n  //   window.location.reload();\n  // }\n\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo.90f64a36.png\";"],"sourceRoot":""}